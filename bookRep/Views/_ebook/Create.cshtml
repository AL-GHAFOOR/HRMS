@using ServiceReportingSystem.Models
@model bookRep.Models.ModelBook

@{
    ViewBag.Title = "New Book Upload";
    Layout = "";
}


<div class="col-md-9">
    <div class="panel panel-info" id="p5" data-panel-color="panel-info" data-panel-fullscreen="false" data-panel-title="false" data-panel-remove="false" data-panel-collapse="false">
        <div class="panel-heading ui-sortable-handle">
            <span class="panel-title">Add New Book</span>

        </div>

        <div class="panel-body ">
            <div class="gallery animation-fadeIn">
                @using (Ajax.BeginForm("Create", "_ebook", new { postOwnerUser = User.Identity.Name }, new AjaxOptions()
                {
                    HttpMethod = "POST",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "GeneralSection",

                }, new { enctype = "multipart/form-data", id = "createBook" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Id)
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Book_Title, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Book_Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Book_Title, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EditionId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.EditionId, (IEnumerable<SelectListItem>)ViewBag.EditionList, new { @class = "" })

                                @Html.ValidationMessageFor(model => model.EditionId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.MultiCategegory, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.ListBoxFor(model => model.MultiCategegory, (IEnumerable<SelectListItem>)ViewBag.SubjectArea, new { @class = "form-control", multiple = "multiple" })
                                @Html.ValidationMessageFor(model => model.MultiCategegory, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ProgramId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.ProgramId, (IEnumerable<SelectListItem>)ViewBag.Program, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProgramId, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        @if (Session["User"] != null)
                        {
                            ModelUser user = (ModelUser)Session["User"];

                            if (user.Type == "ad@min")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-1">
                                        @Html.EditorFor(model => model.Published, new { htmlAttributes = new { @class = "form-control" } })

                                    </div>
                                </div>
                            }
                        }

                        <div class="form-group">

                        </div>

                        <div id="FileBrowse">
                            <label class="control-label col-md-2">File Upload</label>
                            <div class="col-md-10">
                                <input type="file" id="BookdocumBase" multiple="multiple" name="BookdocumBase" class="form-control" />
                            </div>
                            <div class="col-md-10">
                                <label class="control-label col-md-2"></label>
                                <p>
                                    <strong>        N.B : <span class="text-danger">Please select cover photo with pdf document</span></strong>
                                </p>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <div id="progressbar-5">
                                    <div class="progress-label">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <div id="progressbar-5">
                                    <div class="progress-label">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                @*<input type="button" id="UploadBtn" value="Create" class="btn btn-default" />*@
                                <input type="button" id="UploadBtn" onclick="SubmitButtonOnclick();" class="btn btn-danger" value="Upload" />
                                <div class="progress mt10 ">
                                    <div class="progress-bar progress-bar-primary " id="bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">0%</div>
                                </div>
                            </div>
                        </div>
                    </div>


                }

                @*@using (Html.BeginForm("Create", "_ebook", FormMethod.Post, new {id = "createBook", enctype = "multipart/form-data"}))
                    {

                    }*@

            </div>
        </div>
    </div>
</div>
@*<script type="text/javascript" src="/Content/jquery/jquery-1.11.1.min.js"></script>*@
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

<script>

    $('#MultiCategegory').multiselect({
        enableFiltering: true,
        buttonWidth: '100%',
        numberDisplayed: 5,
        nonSelectedText: 'Select subject area',
        onChange: function (element, checked) {
            var brands = $('#SubjectArea_CategoryId option:selected');
            var selected = [];
            $(brands).each(function (index, brand) {
                selected.push([$(this).val()]);
            });

            console.log(selected);
        }
    });
    $('#EditionId').select2({
        width: '100%'
    });
</script>