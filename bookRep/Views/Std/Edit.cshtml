@model bookRep.tbl_Student

@{
    ViewBag.Title = "Index";
    Layout = "";
}
@using (Ajax.BeginForm("Edit", new AjaxOptions()
{
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "bodyContent"
}))
{
<div class="col-md-9">
    <div class="panel panel-info" id="p5" data-panel-color="panel-info" data-panel-fullscreen="false" data-panel-title="false" data-panel-remove="false" data-panel-collapse="false">
        <div class="panel-heading ui-sortable-handle">
            <span class="panel-title">Update Information </span>

        </div>

        <div class="panel-body ">
            <div class="gallery animation-fadeIn">
                @if (ViewBag.Message != null)
                {
                    <div class="alert alert-info light alert-dismissable" id="alert-demo-1" style="display: block;">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                        <i class="fa fa-info pr10"></i>
                        <strong></strong>
                        <a href="#" class="alert-link">@ViewBag.Message</a>
                    </div>
                }
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.Password)

                    <div class="form-group">
                        @Html.Label("Student Id", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StudentId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("First Name", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Email Address", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.email_address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.email_address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group has-feedback">
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control", PlaceHolder = "Password" })
                        <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group has-feedback">
                        @Html.PasswordFor(model => model.ConformPassword, new { @class = "form-control", PlaceHolder = "Conform Password" })
                        <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                        @Html.ValidationMessageFor(model => model.ConformPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.Label("Activation", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Activation)
                                @Html.ValidationMessageFor(model => model.Activation, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
             
            </div>
        </div>
    </div>
</div>
}
